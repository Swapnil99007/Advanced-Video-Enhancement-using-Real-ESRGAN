# -*- coding: utf-8 -*-
"""Yet another copy of Real-ESRGAN-Sber.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/165Q2K6FAcPzifC_9Bq5Nlw-Fbf0AExh4

# Installation
"""

!pip install git+https://github.com/sberbank-ai/Real-ESRGAN.git

"""# Upscale images"""

#@title Create model
from RealESRGAN import RealESRGAN
from PIL import Image
import numpy as np
import torch

device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')
print('device:', device)

model_scale = "4" #@param ["2", "4", "8"] {allow-input: false}

model = RealESRGAN(device, scale=int(model_scale))
model.load_weights(f'weights/RealESRGAN_x{model_scale}.pth')

import os
import cv2
import datetime
from matplotlib import pyplot as plt

data = cv2.VideoCapture('/content/WhatsApp Video 2023-09-30 at 12.40.20.mp4')

# count the number of frames
frames = data.get(cv2.CAP_PROP_FRAME_COUNT)
fps = data.get(cv2.CAP_PROP_FPS)

# calculate duration of the video
seconds = round(frames / fps)
video_time = datetime.timedelta(seconds=seconds)
print(f"duration in seconds: {seconds}")
print(f"video time: {video_time}")


length = int(data.get(cv2.CAP_PROP_FRAME_COUNT))
print(length)

fps = data.get(cv2.CAP_PROP_FPS)
print('frames per second =',fps)

minutes = 0
seconds = 5
frame_id = int(fps*(minutes*60 + seconds))
print('frame id =',frame_id)

upload_folder = 'inputs'
result_folder = 'results'

os.makedirs(upload_folder, exist_ok=True)
os.makedirs(result_folder, exist_ok=True)

for i in range(0, 90):
  data.set(cv2.CAP_PROP_POS_FRAMES, i)
  ret, frame = data.read()
  result_image_path = os.path.join('results/frame_' + str(i) + '.jpg')
  cv2.imwrite(result_image_path, frame)

for i in range(90, 172):
  data.set(cv2.CAP_PROP_POS_FRAMES, i)
  ret, frame = data.read()
  sr_image = model.predict(np.array(frame))
  result_image_path = os.path.join('results/frame_' + str(i) + '.jpg')
  sr_image.save(result_image_path)

print(os.path)

img_array = []
for i in range(0, 172):
  img = cv2.imread(os.path.join('results/frame_' + str(i) + '.jpg'))
  if i > 119:
    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
  # if i < 120:
  img = cv2.resize(img, (3392, 1920))
  height, width, layers = img.shape
  size = (width,height)
  # print(i, size)
  img_array.append(img)

fourcc = cv2.VideoWriter_fourcc(*'DIVX')

out = cv2.VideoWriter('project.mp4',fourcc, 30, size)

for i in range(len(img_array)):
  out.write(img_array[i])
out.release()
